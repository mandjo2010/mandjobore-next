'use client';

import Link from 'next/link';
import * as React from 'react';

import { useFilters } from '@/store/ui';

interface NavigatorProps {
  posts?: Array<{
    slug: string;
    title: string;
    excerpt: string;
    category?: string | null;
    cover?: string | null;
    date: string;
  }>;
}

/**
 * Navigator - Liste d'articles type Gmail/Outlook
 * SIMPLIFIÃ‰ ET FONCTIONNEL
 */
export default function Navigator({ posts = [] }: NavigatorProps) {
  const { categoryFilter } = useFilters();

  console.log('ðŸ“‹ Navigator - posts reÃ§us:', posts.length, posts);

  // Transforme les posts en articles pour le Navigator
  const articles = posts.map(post => ({
    category: post.category || 'Uncategorized',
    date: post.date,
    image: post.cover || '/images/avatar.svg',
    slug: `/posts/${post.slug}`,
    subtitle: post.excerpt.substring(0, 80) + '...',
    title: post.title,
  }));

  // Filtrer les articles selon le filtre actif
  const filteredArticles = React.useMemo(() => {
    if (categoryFilter === 'all posts') return articles;
    return articles.filter(article => 
      article.category.toLowerCase() === categoryFilter.toLowerCase()
    );
  }, [articles, categoryFilter]);

  return (
    <div
      className="navigator"
      style={{
        width: '100%',
        height: '100%',
        background: '#ffffff',
        display: 'flex',
        flexDirection: 'column',
        fontFamily: "'Open Sans', Arial, sans-serif",
        overflow: 'hidden',
        border: '3px solid #2563eb', // DEBUG: Bordure bleue visible
        minHeight: '100vh'
      }}
    >
      {/* Header de la liste */}
      <div
        className="navigator-header"
        style={{
          background: '#f8f9fa',
          borderBottom: '1px solid #e0e0e0',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'space-between',
          padding: '16px 20px',
          minHeight: '56px'
        }}
      >
        <div className="header-title">
          <span
            style={{
              fontSize: '14px',
              fontWeight: '600',
              letterSpacing: '1px',
              color: '#2c3e50',
              textTransform: 'uppercase'
            }}
          >
            ðŸ“§ LIST OF POSTS ({filteredArticles.length})
          </span>
        </div>
      </div>

      {/* Liste des articles */}
      <div
        className="articles-list"
        style={{
          flex: 1,
          overflow: 'auto',
          padding: '10px',
          background: '#fafafa' // DEBUG: Fond clair pour voir la zone
        }}
      >
        {filteredArticles.map((article) => (
          <Link href={article.slug} key={article.slug} style={{ textDecoration: 'none' }}>
            <div
              style={{
                background: '#ffffff',
                border: '1px solid #e0e0e0',
                borderRadius: '8px',
                padding: '15px',
                marginBottom: '10px',
                cursor: 'pointer',
                transition: 'box-shadow 0.2s ease',
                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'
              }}
              onMouseEnter={(e) => {
                e.currentTarget.style.boxShadow = '0 4px 8px rgba(0,0,0,0.15)';
              }}
              onMouseLeave={(e) => {
                e.currentTarget.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';
              }}
            >
              <h3 style={{ 
                margin: '0 0 8px 0', 
                fontSize: '16px', 
                color: '#2c3e50',
                fontWeight: '600'
              }}>
                {article.title}
              </h3>
              <p style={{ 
                margin: '0 0 8px 0', 
                fontSize: '14px', 
                color: '#7f8c8d',
                lineHeight: '1.4'
              }}>
                {article.subtitle}
              </p>
              <div style={{ 
                display: 'flex', 
                justifyContent: 'space-between',
                fontSize: '12px',
                color: '#95a5a6'
              }}>
                <span>{article.date}</span>
                <span style={{
                  background: '#27ae60',
                  color: 'white',
                  padding: '2px 8px',
                  borderRadius: '12px'
                }}>
                  {article.category}
                </span>
              </div>
            </div>
          </Link>
        ))}
        
        {filteredArticles.length === 0 && (
          <div style={{
            textAlign: 'center',
            padding: '40px 20px',
            color: '#7f8c8d'
          }}>
            <p>Aucun article trouvÃ©</p>
          </div>
        )}
      </div>

      {/* Footer avec compteur */}
      <div
        className="navigator-footer"
        style={{
          background: '#f8f9fa',
          borderTop: '1px solid #e0e0e0',
          padding: '12px 20px',
          textAlign: 'center'
        }}
      >
        <span
          style={{
            fontSize: '11px',
            color: '#7f8c8d',
            letterSpacing: '0.5px',
            textTransform: 'uppercase'
          }}
        >
          {filteredArticles.length} article{filteredArticles.length > 1 ? 's' : ''}
        </span>
      </div>
    </div>
  );
}
      {/* Header de la liste */}
      <div
        className="navigator-header"
        style={{
          background: '#f8f9fa',
          borderBottom: '1px solid #e0e0e0',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'space-between',
          padding: '16px 20px',
          minHeight: '56px'
        }}
      >
        <div className="header-title">
          <span
            style={{
              fontSize: '12px',
              fontWeight: '600',
              letterSpacing: '1px',
              color: '#2c3e50',
              textTransform: 'uppercase'
            }}
          >
            {hasActiveFilters ? categoryFilter.toUpperCase() : 'LIST OF POSTS'}
          </span>
          <span
            style={{
              fontSize: '11px',
              color: '#7f8c8d',
              marginLeft: '8px'
            }}
          >
            ({filteredArticles.length})
          </span>
        </div>

        {/* Bouton pour rÃ©duire le navigator (seulement si featured) */}
        {isFeatured && (
          <button
            onClick={moveNavigatorAside}
            style={{
              background: 'none',
              border: 'none',
              color: '#7f8c8d',
              cursor: 'pointer',
              fontSize: '18px',
              padding: '6px',
              borderRadius: '50%',
              transition: 'all 0.2s ease'
            }}
            onMouseEnter={(e) => {
              e.currentTarget.style.background = 'rgba(39, 174, 96, 0.1)';
              e.currentTarget.style.color = '#27ae60';
            }}
            onMouseLeave={(e) => {
              e.currentTarget.style.background = 'none';
              e.currentTarget.style.color = '#7f8c8d';
            }}
            title="RÃ©duire la liste"
          >
            âŒƒ
          </button>
        )}
      </div>

      {/* Liste des articles */}
      <div
        className="articles-list"
        style={{
          flex: 1,
          overflow: 'auto',
          // Masquer les scrollbars mais garder la fonctionnalitÃ©
          scrollbarWidth: 'none', // Firefox
          msOverflowStyle: 'none', // IE
        }}
      >
        <style jsx>{`
          .articles-list::-webkit-scrollbar {
            display: none; /* Chrome, Safari, Opera */
          }
        `}</style>
        
        {filteredArticles.map((article) => (
          <ArticleListItem
            key={article.slug}
            article={article}
            isCompact={!isFeatured}
          />
        ))}
      </div>

      {/* Footer avec compteur */}
      <div
        className="navigator-footer"
        style={{
          background: '#f8f9fa',
          borderTop: '1px solid #e0e0e0',
          padding: '12px 20px',
          textAlign: 'center'
        }}
      >
        <span
          style={{
            fontSize: '11px',
            color: '#7f8c8d',
            letterSpacing: '0.5px',
            textTransform: 'uppercase'
          }}
        >
          {filteredArticles.length} article{filteredArticles.length > 1 ? 's' : ''}
        </span>
      </div>
    </div>
  );
}

// Composant d'item d'article avec CSS pur
interface ArticleListItemProps {
  article: {
    slug: string;
    title: string;
    subtitle: string;
    image: string;
    category: string;
    date: string;
  };
  isCompact: boolean;
}

function ArticleListItem({ article, isCompact }: ArticleListItemProps) {
  return (
    <Link href={article.slug} style={{ textDecoration: 'none' }}>
      <article
        className="article-item"
        style={{
          display: 'flex',
          alignItems: 'flex-start',
          background: '#ffffff',
          border: '1px solid transparent',
          borderRadius: '6px',
          margin: '8px 16px',
          padding: '12px',
          cursor: 'pointer',
          transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)'
        }}
        onMouseEnter={(e) => {
          e.currentTarget.style.background = '#fafbfa';
          e.currentTarget.style.border = '1px solid #27ae60';
          e.currentTarget.style.boxShadow = '0 4px 12px rgba(39, 174, 96, 0.15)';
          e.currentTarget.style.transform = 'translateY(-2px)';
          
          // Effet sur le titre
          const title = e.currentTarget.querySelector('.article-title') as HTMLElement;
          if (title) {
            title.style.color = '#27ae60';
            title.style.textShadow = '0 1px 2px rgba(39, 174, 96, 0.1)';
          }
          
          // Effet sur l'image
          const image = e.currentTarget.querySelector('.article-image') as HTMLElement;
          if (image) {
            image.style.filter = 'brightness(1.1)';
            image.style.transform = 'scale(1.05)';
          }
          
          // Effet sur le subtitle
          const subtitle = e.currentTarget.querySelector('.article-subtitle') as HTMLElement;
          if (subtitle) {
            subtitle.style.color = '#555555';
          }
        }}
        onMouseLeave={(e) => {
          e.currentTarget.style.background = '#ffffff';
          e.currentTarget.style.border = '1px solid transparent';
          e.currentTarget.style.boxShadow = 'none';
          e.currentTarget.style.transform = 'translateY(0)';
          
          // Reset du titre
          const title = e.currentTarget.querySelector('.article-title') as HTMLElement;
          if (title) {
            title.style.color = '#2c3e50';
            title.style.textShadow = 'none';
          }
          
          // Reset de l'image
          const image = e.currentTarget.querySelector('.article-image') as HTMLElement;
          if (image) {
            image.style.filter = 'none';
            image.style.transform = 'scale(1)';
          }
          
          // Reset du subtitle
          const subtitle = e.currentTarget.querySelector('.article-subtitle') as HTMLElement;
          if (subtitle) {
            subtitle.style.color = '#7f8c8d';
          }
        }}
      >
        {/* Image miniature */}
        <div
          className="article-image"
          style={{
            width: isCompact ? '50px' : '75px',
            height: isCompact ? '50px' : '75px',
            borderRadius: '6px',
            backgroundImage: `url(${article.image})`,
            backgroundSize: 'cover',
            backgroundPosition: 'center',
            flexShrink: 0,
            marginRight: '12px',
            transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
            border: '1px solid #e0e0e0'
          }}
        />

        {/* Contenu */}
        <div
          className="article-content"
          style={{
            flex: 1,
            minWidth: 0 // Permet au contenu de se rÃ©trÃ©cir si nÃ©cessaire
          }}
        >
          <h3
            className="article-title"
            style={{
              margin: '0 0 6px 0',
              fontSize: isCompact ? '14px' : '16px',
              fontWeight: '600',
              lineHeight: isCompact ? '1.2' : '1.3',
              color: '#2c3e50',
              transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
              // GÃ©rer les longs titres
              overflow: 'hidden',
              textOverflow: 'ellipsis',
              display: '-webkit-box',
              WebkitLineClamp: isCompact ? 2 : 3,
              WebkitBoxOrient: 'vertical'
            }}
          >
            {article.title}
          </h3>

          <p
            className="article-subtitle"
            style={{
              margin: '0 0 8px 0',
              fontSize: isCompact ? '12px' : '13px',
              lineHeight: '1.4',
              color: '#7f8c8d',
              transition: 'color 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
              // GÃ©rer les longs sous-titres
              overflow: 'hidden',
              textOverflow: 'ellipsis',
              display: '-webkit-box',
              WebkitLineClamp: isCompact ? 2 : 3,
              WebkitBoxOrient: 'vertical'
            }}
          >
            {article.subtitle}
          </p>

          <div
            className="article-meta"
            style={{
              fontSize: '10px',
              color: '#95a5a6',
              letterSpacing: '0.5px',
              textTransform: 'uppercase'
            }}
          >
            {article.category} â€¢ {new Date(article.date).toLocaleDateString('fr-FR')}
          </div>
        </div>
      </article>
    </Link>
  );
}
